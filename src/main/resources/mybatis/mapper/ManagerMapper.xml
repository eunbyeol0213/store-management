<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.manager.dao.IManagerRepository">



<!-- author 고은별 
   담당자 목록 조회-->
<select id="selectManagerList" resultType="com.mycompany.webapp.manager.vo.ManagerVO">
<![CDATA[   
   SELECT * FROM(
      SELECT rownum as rnum, userCode, userName, userBirth, userTel, userEmail, userTeamCode, userHireDate, userResignDate 
      FROM (
         SELECT
               user_code as userCode,
               user_name as userName,
               TO_CHAR(user_birth, 'YYYY-MM-DD') as userBirth,
               REGEXP_REPLACE(user_tel, '(.{3})(.+)(.{4})', '\1-\2-\3') as userTel,
               user_email as userEmail,
               user_team_code as userTeamCode,
               TO_CHAR(user_hire_date, 'YYYY-MM-DD') as userHireDate,
               TO_CHAR(user_resign_date, 'YYYY-MM-DD') as userResignDate
         FROM  userinfo
         WHERE user_code > 30000 
         ORDER BY user_code desc
      )
      WHERE rownum <= #{endRowNo}
   )
   WHERE rnum >= #{startRowNo} 
         
]]>
</select>

<!-- author 고은별 
    담당자 등록-->
<insert id="insertManager" parameterType="com.mycompany.webapp.manager.vo.ManagerVO">
<![CDATA[   
INSERT INTO userInfo(user_code, user_password, user_name, user_birth, user_tel, user_email,user_team_code, user_hire_Date)
VALUES   (
         (SELECT NVL(MAX(user_code)+1, 10001) FROM userinfo), 
         #{userPassword}, #{userName}, #{userBirth}, regexp_replace(#{userTel},'[[:punct:] ]',''), #{userEmail}, #{userTeamCode}, #{userHireDate})
]]>
</insert>  

<!--author 고은별  
   담당자 최대 코드 -->
<select id="selectMaxManagerNo" parameterType="int" resultType="int">
   SELECT NVL(max(user_code),30001) as "userCode"
   FROM userInfo
</select>  

<!--author 고은별 
	담당자 정보 수정  -->
<update id="updateManagerInfo" parameterType="com.mycompany.webapp.manager.vo.ManagerVO">
   UPDATE userInfo
   SET user_tel=regexp_replace(#{userTel},'[[:punct:] ]',''), user_email=#{userEmail}, user_team_code=#{userTeamCode}, user_resign_date=#{userResignDate,jdbcType=DATE} 
   WHERE user_code= #{userCode}
</update>

 <!--author 고은별 
 	 담당자 전체 인원 수
  -->
<select id="countAllMgr" resultType="int">
SELECT COUNT(*) FROM userInfo
WHERE user_code > 30000 
</select>

<!-- author 고은별 
	키워드별 담당자 수  -->
<select id="managerCountByKeyword" parameterType="string" resultType="int">
	SELECT count(*) from userInfo WHERE
	<choose>
		<when test="keywordType == 'UC'">
		    user_code like ('%' ||#{keyword}||'%') AND
		</when>
		<when test="keywordType == 'UN'">
		   user_name like ('%' ||#{keyword}||'%') AND
		</when>
		<when test="keywordType == 'UTC'">
		   user_team_code like ('%' ||#{keyword}||'%') AND
		</when>
	 </choose>
	   user_code > 30000
</select>

<!-- author 고은별 
	 키워드 별 담당자 검색 -->
<select id="managerSearch" parameterType="map" resultType="com.mycompany.webapp.manager.vo.ManagerVO">
<![CDATA[
SELECT * FROM(
      SELECT rownum as rnum, userCode, userName, userBirth, userTel, userEmail, userTeamCode, userHireDate, userResignDate 
      FROM (
         select
               user_code as userCode,
               user_name as userName,
               TO_CHAR(user_birth, 'YYYY-MM-DD') as userBirth,
               user_tel as userTel,
               user_email as userEmail,
               user_team_code as userTeamCode,
               TO_CHAR(user_hire_date, 'YYYY-MM-DD') as userHireDate,
               TO_CHAR(user_resign_date, 'YYYY-MM-DD') as userResignDate
         FROM  userinfo
         WHERE user_code > 30000 
         ]]> 
		<choose>
		    <when test="keywordType == 'UC'">
		     AND user_code like ('%' ||#{keyword}||'%')
		    </when>
		    <when test="keywordType == 'UN'">
		     AND user_name like ('%' ||#{keyword}||'%')
		    </when>
		    <when test="keywordType == 'UTC'">
		     AND user_team_code like ('%' ||#{keyword}||'%')
		    </when>
	    </choose>

<![CDATA[
         ORDER BY user_code desc
      )
      WHERE rownum <= #{pager.endRowNo}
   )
   WHERE rnum >= #{pager.startRowNo} 
]]>
</select>

<!-- author 고은별
	담당자 코드가 같은  데이터가 있는지 조회
 -->
<select id="mgrIsDataExist" parameterType="com.mycompany.webapp.manager.vo.ManagerVO" resultType="int">
 <![CDATA[
SELECT count(*) 
FROM userinfo
WHERE user_code = #{userCode}
]]>
</select>

<!-- author 고은별
	파일 업로드 히스토리
 -->
<select id="mgrUploadFileHistory" resultType="map">
  <![CDATA[
 	SELECT TO_CHAR(F.file_post_date, 'YYYY-MM-DD') AS "postDate"
			, U.user_name AS "userName"
			, F.file_original_name AS "originalName"
			, H.history_insert AS "insert"
			, H.history_update AS "update"
	FROM history H
		JOIN fileinfo F ON H.file_no = F.file_no
		JOIN userinfo U ON H.user_code = U.user_code
    WHERE f.file_saved_name like ('%' ||'manager'||'%')
	]]>
</select> 
 
<!-- author 은별
	 엑셀 업로드한 총수 -->
<select id="mgrUploadFileTotalCount" resultType="int">
	SELECT count(*)
	FROM history H
		JOIN fileinfo F ON H.file_no = F.file_no
		JOIN userinfo U ON H.user_code = U.user_code
    WHERE f.file_saved_name like ('%' ||'manager'||'%')
</select>
 
<!-- 
   userCode로 담당 센터 조회
   임유진
 -->
<select id="getCenterByManager" parameterType="int" resultType="com.mycompany.webapp.center.vo.CenterVO">

SELECT center_code AS centerCode,
       center_name AS centerName,
       center_address AS centerAddress
FROM center 
WHERE center_code in (
    select center_code
    from mapping
    where user_code = #{userCode}
)
</select>
<!-- 
   맵핑 해제
   임유진
 -->
<delete id="cancelMapping" parameterType="int">
DELETE FROM mapping WHERE center_code = #{centerCode} AND user_code = #{userCode}
</delete>
<!-- 
   맵핑
   임유진
 -->
 <insert id="mapping" parameterType="int">
 INSERT INTO mapping (center_code, user_code, mapping_date)
 VALUES (#{centerCode}, #{userCode}, SYSDATE)
 </insert>
 

</mapper>