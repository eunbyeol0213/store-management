<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.score.dao.IScoreRepository">
<!-- 
	전체 그룹 코드, 코드명, 사용여부 조회
	임유진
 -->
<select id="getAllGroupCodes" resultType="map">
	SELECT check_group_code
			, check_group_content
			, check_group_occupied
	FROM check_group
</select>

<!-- 
	그룹 코드에 해당하는 전체 상세 코드, 코드명, 사용여부 조회
	임유진
 -->
<select id="getDetailCodes" parameterType="String" resultType="map">
	SELECT LPAD(check_detail_code,2,0) AS check_detail_code
			, check_detail_content
			, check_detail_occupied
	FROM check_detail
	WHERE check_group_code = #{groupCode}
</select>

<!-- 
점수조회
정윤선
 -->
<select id="getScoreList"  resultType="com.mycompany.webapp.score.vo.ScoreVO">
<![CDATA[
select 
 	   I.center_code as "centerCode",
       I.user_code as "userCode",
       I.check_detail_code as "checkDetailCode",
       I.check_year as "checkYear",
       I.check_season as "checkSeason",
       D.check_group_code as "checkGroupCode",
       G.check_group_content as "checkGroupContent",
       D.check_detail_content as "checkDetailContent",
       I.check_score as "checkScore"
       
from check_detail D  left outer join Inspection I
        on D.check_group_code = I.check_group_code
        and D.check_detail_code=I.check_detail_code
        
        left outer join check_group G
        on I.check_group_code = G.check_group_code
where I.center_code=#{centerCode}
order by I.check_year,I.check_season desc

]]>

</select>
<!-- 
 점수 항목 조회
(모달)
정윤선
 -->
 <select id="usingCodeList"  resultType="com.mycompany.webapp.score.vo.ScoreVO">
 <![CDATA[
 
select
G.check_group_content as "checkGroupContent",
D.check_detail_content as "checkDetailContent",
D.check_group_code as"checkGroupCode",
D.check_detail_code as "checkDetailCode"

FROM check_group G
	full outer JOIN check_detail D 
	ON G.check_group_code = D.check_group_code
WHERE D.check_detail_occupied = 'Y'


]]>
</select>
<!-- 

점수 수정
정윤선

 -->

<update id="saveScore" parameterType="com.mycompany.webapp.score.vo.ScoreVO">
<![CDATA[

	update inspection
	set CHECK_SCORE=#{checkScore}

]]>

</update> 
<!-- 

점수등록
정윤선

 -->
 
 <insert id="insertScore" parameterType="com.mycompany.webapp.score.vo.ScoreVO">
 <![CDATA[
INSERT INTO INSPECTION(
	center_code,
 	user_code,
 	check_year,
 	check_season, 
 	check_group_code, 
 	check_detail_code,
 	check_score
 	)
 values(
 	#{centerCode},
 	#{userCode}, 
 	#{checkYear}, 
 	#{checkSeason}, 
 	#{checkGroupCode}, 
 	#{checkDetailCode}, 
 	#{checkScore}
 	)
 
 
 ]]>
 
 </insert> 
 
 
 
 

<!-- 
	상세코드 수정.
	 코드는 수정 불가(PK), 코드명, 사용여부 수정 가능
	 그룹별 사용여부 수정할 수 있음
	 임유진 
-->
<update id="updateDetailCode" parameterType="map">
	UPDATE check_detail 
	SET check_detail_content = NVL(#{detailContent, jdbcType=VARCHAR}, check_detail_content)
		, check_detail_occupied = #{detailOccupied}
	WHERE check_group_code = #{groupCode} <if test="detailCode != null">AND check_detail_code = #{detailCode}</if>
</update>

<!-- 
	그룹코드 수정.
	코드는 수정 불가(PK), 코드명, 사용여부 수정 가능
	임유진
 -->
<update id="updateGroupCode" parameterType="map">
 	UPDATE check_group
 	SET check_group_content = #{groupContent}
 		, check_group_occupied = #{groupOccupied}
 	WHERE check_group_code = #{groupCode}
</update>

<!-- 
	상세코드 추가
	임유진
 -->
 <insert id="insertDetailCode" parameterType="map">
 	INSERT INTO check_detail (check_group_code, check_detail_code, check_detail_content, check_detail_occupied)
 	VALUES (#{groupCode}, #{detailCode}, #{detailContent}, #{detailOccupied})
 </insert>
 
 <!-- 
 	그룹코드 추가
 	임유진
 -->
 <insert id="insertGroupCode" parameterType="map">
 	INSERT INTO check_group (check_group_code, check_group_content, check_group_occupied)
 	VALUES (#{groupCode}, #{groupContent}, #{groupOccupied})
 </insert>
</mapper>